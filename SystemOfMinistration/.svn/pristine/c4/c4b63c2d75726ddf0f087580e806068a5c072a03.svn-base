package com.zrgk.project.servlet;

import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import com.zrgk.project.model.Basicer;
import com.zrgk.project.service.BasicerServiceInter;
import com.zrgk.project.service.impl.BasicerServiceImpl;
/**
 * 
 * @function: 基本信息管理-->主页面的查询的servlet
 * @author: 张春玲
 * @time: 2015-6-5
 *
 */
public class Basic_Servlet extends HttpServlet{
	@Override
	protected void doGet(HttpServletRequest req, HttpServletResponse resp)
			throws ServletException, IOException {
		doPost(req, resp);
	}
	@Override
	protected void doPost(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		//处理编码格式
		request.setCharacterEncoding("utf-8");
		response.setContentType("text/html;charset=utf-8");
		
		//实例化
		BasicerServiceInter basic=new BasicerServiceImpl();
		List<Basicer> list=new ArrayList<Basicer>();
		Basicer b=new Basicer();
				
		//得到页面点搜索时提交表单的参数（查询条件、关键字、排序）
		String condition=request.getParameter("condition");
		String keyword=request.getParameter("keyword");
		String orderby=request.getParameter("orderby");
		
		//建立session
		HttpSession session=request.getSession();
		
		//点搜索时走的if：当页面有参数传来时，		
		if(keyword!=null&&!"".equals(keyword.trim())){
			System.out.println("----------------------");
			System.out.println(session.getAttribute("key")+"11111111");
			if(session.getAttribute("key")!=null&&!"".equals(session.getAttribute("key"))){
				if(keyword==session.getAttribute("key")){
					;//如何在serlvet里获得session的值
				}else{
					session.removeAttribute("key");		//session有值的时値移除
				}
				
			}else{
				session.setAttribute("key", keyword);	//session没值的时侯赋值
			}
		}
		
		if(condition!=null&&Integer.parseInt(condition)==1){
			b.setProjectName(keyword);
			if(session.getAttribute("conditon")!=null&&!"".equals(session.getAttribute("conditon"))){
				session.removeAttribute("conditon");		//session有值的时値移除
			}else{
			session.setAttribute("conditon",  Integer.parseInt(condition));	//session没值的时侯赋值
			}
		}
		if(condition!=null&&Integer.parseInt(condition)==2){
			b.setManager(keyword);
			if(session.getAttribute("conditon")!=null&&!"".equals(session.getAttribute("conditon"))){
				session.removeAttribute("conditon");		//session有值的时値移除
			}else{
			session.setAttribute("conditon", Integer.parseInt(condition));	//session没值的时侯赋值
			}
		}
		if(orderby!=null&&Integer.parseInt(orderby)==1){
			b.setOrder(Integer.parseInt(orderby));
			if(session.getAttribute("order")!=null&&!"".equals(session.getAttribute("order"))){
				session.removeAttribute("order");		//session有值的时値移除
			}else{
			session.setAttribute("order",  Integer.parseInt(orderby));	//session没值的时侯赋值
			}
		}
		if(orderby!=null&&Integer.parseInt(orderby)==2){
			b.setOrder(Integer.parseInt(orderby));
			if(session.getAttribute("order")!=null&&!"".equals(session.getAttribute("order"))){
				session.removeAttribute("order");		//session有值的时値移除
			}else{
			session.setAttribute("order",  Integer.parseInt(orderby));	//session没值的时侯赋值
			}
		}
		
		
		//获取点击分页时传来的参数：那里的参数只有在搜索之后传的，如果没有搜索，只为空,完后也要回写
		String condi=request.getParameter("acon");
		String keyy=request.getParameter("akey");
		String ord=request.getParameter("aorder");
		
		//点分页走的if:得到链接传来的参数（查询条件），用于按参数查询
		if(keyy!=null&&!"".equals(keyy.trim())){
			keyy=new String(keyy.getBytes("iso8859-1"),"utf-8");			//处理页面链接传来的参数乱码的问题 
		}
		if(condi!=null&&""!=condi.trim()&&Integer.parseInt(condi)==1){		//有值时，才赋javabean及回写
			b.setProjectName(keyy);											//项目名称关键字
		}
		if(condi!=null&&""!=condi.trim()&&Integer.parseInt(condi)==2){
			b.setManager(keyy);												//经理姓名关键字	
		}
		if(ord!=null&&""!=ord.trim()){
			b.setOrder(Integer.parseInt(ord));
		}
		
		//分页信息 
		String currentPage=request.getParameter("currentPage");	//得到jsp页传过来的当前页数
		if(currentPage!=null&&!"".equals(currentPage.trim())){
			b.setCurrentPage(Integer.parseInt(currentPage));	//将得到的当前页数封装到对象u里
		}		
		b.setTotalSize(basic.totalSize(b));//调用返回总数据条数方法，并封装到u对象里，只有一封装，就会在Page类里计算出总页数，调用查询方法时再用
		request.setAttribute("basicer", b);//将封装有总页数、当前页数的user赋给request，当跳到jsp查询页面时，可取当前页数等等		
		
		request.setAttribute("list", basic.queryAllBasicer(b));//查回所有数据
		
		request.getRequestDispatcher("/jsp/jsp_project/project-base.jsp").forward(request, response);
	}

}
