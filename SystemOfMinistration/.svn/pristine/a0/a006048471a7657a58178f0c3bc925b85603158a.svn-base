package com.zrgk.infobox.servlet;

import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.PrintWriter;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.commons.fileupload.FileItem;
import org.apache.commons.fileupload.disk.DiskFileItemFactory;
import org.apache.commons.fileupload.servlet.ServletFileUpload;

import com.zrgk.infobox.model.MailBox;
import com.zrgk.infobox.service.MailBoxServiceInter;
import com.zrgk.infobox.service.impl.MailBoxServiceImpl;

/**
 * 带有文件上传的写信息的servlet
 */

public class UploadFileSevlet extends HttpServlet {
	
	MailBoxServiceInter  mailBoxService=new MailBoxServiceImpl();//实例化
	@Override
	protected void doGet(HttpServletRequest req, HttpServletResponse resp)
			throws ServletException, IOException {
		doPost(req,resp);
	}
	
	@Override
	protected void doPost(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		request.setCharacterEncoding("utf-8");
		response.setContentType("text/html;charset=utf-8");
	
		String path = request.getRealPath("/upload");//文件存放在WebRoot下的upload文件夹里
		DiskFileItemFactory fileFactory = new DiskFileItemFactory(1024 * 1024,new File(path));//上传文件要用到的file工厂类
		
		ServletFileUpload upload = new ServletFileUpload(fileFactory);
		 MailBox  mailBox=new MailBox();//初始化
		// mailBox.setTime("time");
		 
//		 HttpSession session=request.getSession();//通过session获取发件人的名字
//			String user=(String) session.getAttribute("emplInfo"，empl);
		 
		 SimpleDateFormat sdf=new SimpleDateFormat("yyyy-MM-dd");//获得当前的时间
			String ime=sdf.format(new Date());
		try {
			List<FileItem> list = upload.parseRequest(request);//list就是存是页面所有的关于文本框或选择框之类的元素标签
			
			for (FileItem item : list) {
				//(item.isFormField()是判断是否是页面类拟于文本的元素
				
				if (item.isFormField()) {
					String fieldName = item.getFieldName();
					String fieldValue = item.getString("utf-8");
					System.out.println(fieldName+":"+fieldValue);
					
					if(fieldName.equals("title")){
						mailBox.setTitle(fieldValue);
					}
					else if(fieldName.equals("content")){
						mailBox.setContent(fieldValue);
					}
					else if(fieldName.equals("adressee")){
						mailBox.setAdressee(Integer.parseInt(fieldValue));
						
						
					}
//					else if(fieldName.equals("adresser")){
//						mailBox.setAdresser(Integer.parseInt(fieldValue));	
//						
//					}

					}else {
					//页面对应的<input type="file" 上传文件 的处理
					String fieldName = item.getFieldName();
					String oldFileName = item.getName();
					
					if(oldFileName!=null&&!"".equals(oldFileName.trim())){
						//取原始文件名的后缀
						String last=oldFileName.substring(oldFileName.lastIndexOf("."),oldFileName.length());
						System.out.println("last="+last);
						String fileName =String.valueOf(System.currentTimeMillis())+last;
						request.setAttribute("fileName", fileName);
						mailBox.setSlave(fileName);
						//把文件用流的形式写到硬盘上去
						InputStream inputStream = item.getInputStream();
						OutputStream outputStream = new FileOutputStream(new File(
								path, fileName));
						int lenght = 0;
						byte[] b = new byte[500];
						while ((lenght = inputStream.read(b)) > 0) {
							outputStream.write(b, 0, lenght);
						}
						outputStream.close();
						inputStream.close();
					}	
				}
			}
		
		} catch (Exception e) {
			e.printStackTrace();
		}
			mailBox.setTime(ime);//时间赋值
				//System.out.println(ime);
			
		//mailBox.setAdresser(Integer.parseInt("user"));//赋值发件人到到数据库
			mailBox.setAdresser(67);
			
			mailBoxService.insertMailBox(mailBox);
			
		request.getRequestDispatcher("/seekMailServlet.action").forward(request, response);
		
	}
}
