package com.zrgk.task.servlet;

import java.io.IOException;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import com.zrgk.task.model.Task;
import com.zrgk.task.service.TaskServiceInter;
import com.zrgk.task.service.impl.TaskServiceImpl;

/**
 * @function: 任务管理servlet层的插入任务信息——insertTaskServlet.java
 * @author: 刘淼
 * @time: 2015-6-4
 * */
public class InsertTaskServlet extends HttpServlet{
	
	TaskServiceInter taskService = new TaskServiceImpl();
	@Override
	protected void doGet(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		 doPost(request, response);
	}
	
	@Override
	protected void doPost(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		 
		//设置request、response的编码格式 
		request.setCharacterEncoding("utf-8");
		response.setContentType("text/html;charset=utf-8");	
		
		//获取request接收到任务表中的信息
		//处理参考位置的联动 	
		String pid=request.getParameter("pid");//参考位置第一级id
		String nid=request.getParameter("nid");//参考位置第二级id
		
		//输出任务表的id
		System.out.println("pid="+pid);		
		//任务表的name
		String planOption=request.getParameter("planOption");
		System.out.println("planOption="+planOption);
		
		String beginTime=request.getParameter("beginTime");
		System.out.println("beginTime="+beginTime);
		
		String endTime=request.getParameter("endTime");
		System.out.println("endTime="+endTime);
		
		String executor=request.getParameter("executor");
		System.out.println("executor="+executor);
		
		String grade=request.getParameter("grade");
		System.out.println("grade="+grade);
		
		String detailExplain=request.getParameter("detailExplain");
		System.out.println("detailExplain="+detailExplain);
		
		//实例化任务表 		
		Task task=new Task();
		task.setReferenceSite(pid+","+nid);//连接第一级与第二级的id并用逗号分隔输出
		task.setPlanOption(planOption);
		task.setBeginTime(beginTime);
		task.setEndTime(endTime);
		task.setExecutor(Integer.parseInt(executor));
		task.setGrade(Integer.parseInt(grade));
		task.setDetailExplain(detailExplain);
		
		//调转页面并回写信息		
		taskService.insertTask(task);
		request.getRequestDispatcher("jsp/jsp_task/task_add.jsp").forward(request, response);
	}	
}